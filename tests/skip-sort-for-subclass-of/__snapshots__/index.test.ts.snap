// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`react/sort-comp [] react-1.jsx 1`] = `
"import * as React from "react";

class MyComponent extends React.Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp ["React.Component"] react-1.jsx 1`] = `
"import * as React from "react";

class MyComponent extends React.Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  render() {
    return null;
  }

  onClick() {}
}
"
`;

exports[`react/sort-comp ["Promise"] react-1.jsx 1`] = `
"import * as React from "react";

class MyComponent extends React.Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp [] react-3.tsx 1`] = `
"import * as React from "react";

type Props = { roomId: string };
type State = { serverUrl: string };

class MyComponent extends React.Component<Props, State> {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp [] react-2.jsx 1`] = `
"class MyComponent extends Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp ["React.Component"] react-3.tsx 1`] = `
"import * as React from "react";

type Props = { roomId: string };
type State = { serverUrl: string };

class MyComponent extends React.Component<Props, State> {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  render() {
    return null;
  }

  onClick() {}
}
"
`;

exports[`react/sort-comp ["React.Component"] react-2.jsx 1`] = `
"class MyComponent extends Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp ["Promise"] react-3.tsx 1`] = `
"import * as React from "react";

type Props = { roomId: string };
type State = { serverUrl: string };

class MyComponent extends React.Component<Props, State> {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;

exports[`react/sort-comp ["Promise"] react-2.jsx 1`] = `
"class MyComponent extends Component {
  state = {
    serverUrl: "https://localhost:1234",
  };

  componentDidMount() {
    this.setupConnection();
  }

  componentDidUpdate(prevProps, prevState) {
    if (
      this.props.roomId !== prevProps.roomId ||
      this.state.serverUrl !== prevState.serverUrl
    ) {
      this.destroyConnection();
      this.setupConnection();
    }
  }

  onClick() {}
  render() {
    return null;
  }
}
"
`;
